@inherits Amplify.Web.Custom.ViewPages.AmplifyViewPage<BlockListItem>
@using Amplify.Web.Custom.Extensions
@using Umbraco.Core.Models.Blocks

@{
    var content = new FooterSection(Model.Content);
    var linkClass = RazorHelper.TextColorClass(SiteService?.SiteConfig?.Footer?.FooterLinksColor?.Alias);
    var isColorClass = RazorHelper.IsColorClass(SiteService?.SiteConfig?.Footer?.FooterLinksColor?.Alias);
}

@foreach (var navColumn in content.SectionBlocks)
{
    switch (navColumn.Content.ContentType.Alias)
    {
        case LinksColumn.ModelTypeAlias:
            var linksColumn = navColumn.Content as LinksColumn;
            <div class="column is-half-tablet is-one-quarter-desktop">
                @if (linksColumn.Title.HasValue())
                {
                    <h5 class="title is-6">@linksColumn.Title</h5>
                }
                <ul>
                    @foreach (var link in linksColumn.ChildLinks)
                    {
                        <li class="has-margin-bottom-3">@RazorHelper.RenderLink(link, linkClass)</li>
                    }
                </ul>
            </div>
            break;
        case ArticleColumn.ModelTypeAlias:
            var articleColumn = navColumn.Content as ArticleColumn;
            <div class="column amplify-footer-column  is-half-tablet is-one-quarter-desktop">
                @if (articleColumn.Title.HasValue())
                {
                    <h5 class="title is-6">@articleColumn.Title</h5>
                }
                @foreach (var article in articleColumn.Articles)
                {
                    if (articleColumn.IsFeatured)
                    {
                        @RenderFeatured(article, linkClass)
                    }
                    else
                    {
                        @RenderArticle(article, linkClass)
                    }

                }
            </div>
            break;
        case LatestArticles.ModelTypeAlias:
            var latestArticles = navColumn.Content as LatestArticles;
            if (latestArticles.Article.HasValue())
            {
                int.TryParse(latestArticles.ItemsToShow, out var take);
                var articles = latestArticles.Article.Children.OrderByDescending(x => x.Value<DateTime>("displayDate")).Take(take);
                <div class="column amplify-footer-column  is-half-tablet is-one-quarter-desktop">
                    @if (latestArticles.Title.HasValue())
                    {
                        <h5 class="title is-6">@latestArticles.Title</h5>
                    }
                    @foreach (var article in articles)
                    {
                        @RenderArticle(article, linkClass)
                    }
                </div>
            }
            break;

        case SocialLinksColumn.ModelTypeAlias:
            var socialLinkColumn = navColumn.Content as SocialLinksColumn;
            <div class="column amplify-footer-social is-half-tablet is-one-quarter-desktop ">
                @if (socialLinkColumn.Title.HasValue())
                {
                    <h5 class="title is-6">@socialLinkColumn.Title</h5>
                }

                @foreach (var faLink in socialLinkColumn.ChildLinks)
                {
                    if (faLink.Link.HasValue())
                    {
                        <a href="@faLink.Link.Url" title="@faLink.Link.Name" class="button @isColorClass has-margin-bottom-4 has-margin-right-2" target="@faLink.Link.Target">
                            @if (faLink.ClassName.HasValue())
                            {
                                <span class="icon is-large">
                                    <i class="@faLink.ClassName fa-lg"></i>
                                </span>
                            }
                        </a>
                    }
                }
            </div>
            break;

        case ContactInformation.ModelTypeAlias:
            var contactInformation = navColumn.Content as ContactInformation;
            contactInformation.LinkClass = linkClass;

            <div class="column is-half-tablet amplify-contact-information">
                @if (contactInformation.Title.HasValue())
                {
                    <h5 class="title is-6">@contactInformation.Title</h5>
                }

                @Html.Partial($"~/Views/Partials/Blocks/contactinformation.cshtml", contactInformation)
            </div>
            break;

        case AlignedTextColumn.ModelTypeAlias:
            var alignedTextColumn = navColumn.Content as AlignedTextColumn;
            <div class="column is-half-tablet">
                @if (alignedTextColumn.Title.HasValue())
                {
                    <h5 class="title is-6">@alignedTextColumn.Title</h5>
                }
                @if (alignedTextColumn.ContentBlocks.HasValue())
                {
                    foreach (var item in alignedTextColumn.ContentBlocks)
                    {
                        @Html.Partial($"~/Views/Partials/Blocks/alignedText.cshtml", item)
                    }
                }
            </div>
            break;
    }
}

@helper RenderArticle(IPublishedContent article, string linkClass)
{
    var item = article as Article;
    <article class="media has-padding-right-4-desktop">
        @if (item.Image.HasValue())
        {
            <figure class="media-left  has-margin-right-4">
                <a class="image is-64x64" href="@item.Url()">
                    @RazorHelper.GetThumbnailImage(item.Image, item.Title)
                </a>
            </figure>
        }
        <div class="media-content">
            <div class="content">
                <p>
                    <small>@item.DisplayDate.ToDisplayDate()</small><br />
                    <a href="@item.Url()" class="@linkClass">
                        @if (item.Title.HasValue())
                        {
                            @item.Title
                        }
                    </a>
                </p>
            </div>
        </div>
    </article>
}

@helper RenderFeatured(IPublishedContent article, string linkClass)
{
    var item = article as Article;
    <article class="has-padding-right-4-desktop has-margin-bottom-4 amplify-footer-featured">
        @if (item.Image.HasValue())
        {
            <figure class="has-margin-bottom-4">
                <a class="image is-3by2" href="@item.Url()">
                    @RazorHelper.GetFeaturedThumbnailImage(item.Image, item.Title)
                </a>
            </figure>
        }
        <div class="content">
            <p>
                <small>@item.DisplayDate.ToDisplayDate()</small><br />
                <a href="@item.Url()" class="@linkClass">
                    @if (item.Title.HasValue())
                    {
                        @item.Title
                    }
                </a>
            </p>
        </div>
    </article>
}