@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Core.Models.Blocks.BlockListItem>
@using Amplify.Web.Custom.Extensions

@{
    var content = Model.Content as ClientsAndTestimonials;
    var settings = Model.Settings as ClientsAndTestimonialsSettings;

    var alignment = RazorHelper.AlignmentClass(settings?.TextAlignment);
    var textClass = RazorHelper.TextColorClass(settings?.TextColor.Alias);
    var bgClass = RazorHelper.BackgroundClass(settings?.TestimonialBoxBgColor.Alias);
}

@SectionHelper.RenderSectionStart(
    backgroundClass: settings?.BgColor.Alias,
    bgTexture: settings?.BgTexture?.Url(),
    gradient: settings?.BgGradient,
    textClass: settings?.TextColor?.Alias,
    paddingSize: settings?.Spacing,
    className: $"amplify-clients-testimonials-section {settings?.CustomClass}")

@Html.Partial($"~/Views/Partials/Blocks/SectionTitleItem.cshtml", new TitleItem(Model.Content))

@if (content.Testimonials.HasValue())
{
    <div class="column is-12 is-half-desktop" data-aos="fade-left">
        <div class="amplify-testimonial box @settings?.TextAlignment @bgClass @textClass has-margin-bottom-4">
            @if (content.Testimonials.Count > 1)
            {

                @:<div class="glide-container">
                    @:<div class="glide glideMini">
                        @:<div class="glide__track" data-glide-el="track">
                            @:<ul class="glide__slides">


                            }
            @foreach (var item in content.Testimonials.Select((value, i) => new { i, value }))
            {
                var block = item.value.Content as Testimonial;

                if (content.Testimonials.Count() > 1)
                {
                    @:<li class="glide__slide">
                    }
                    <article>
                        @if (item.value.Content.HasValue())
                        {
                            <div class="is-italic is-size-5 is-size-4-tablet">
                                @block.Content
                            </div>
                        }
                        <div class="media has-margin-top-5 @alignment">
                            @if (block.Image.HasValue())
                            {
                                <figure class="media-left has-margin-right-4">
                                    <span class="image is-64x64">
                                        @RazorHelper.GetThumbnailImage(block.Image, block.Person, "is-rounded")
                                    </span>
                                </figure>
                            }
                            <div class="media-content">
                                <div class="content">
                                    <p>
                                        <strong>@block.Person</strong><br />
                                        @block.Position - @block.Location
                                    </p>
                                </div>
                            </div>
                        </div>
                    </article>
                    if (content.Testimonials.Count() > 1)
                    {
                    @:</li>
                }
            }
            @if (content.Testimonials.Count() > 1)
            {
            @:</ul>
        @:</div>
        <div class="glide__bullets" data-glide-el="controls[nav]">
            @foreach (var item in content.Testimonials.Select((value, i) => new { i, value }))
            {
                var block = item.value.Content as Testimonial;
                <button class="glide__bullet" aria-label="@Umbraco.GetDictionaryValue("General.Go.To.Slide") @block.Person" data-glide-dir="=@item.i"></button>
            }
        </div>
    @:</div>
@:</div>
}
        </div>
    </div>
}

@if (content.Clients.HasValue())
{
    <div class="amplify-client-logos column is-half-desktop" data-aos="fade-right">
        <div class="columns is-multiline is-mobile is-centered">
            @foreach (var client in content.Clients)
            {
                var block = client.Content as ClientDetails;

               <div class="column is-half-mobile is-one-third-tablet is-half-desktop is-one-third-widescreen">
                    <div class="align-content-vertical-center amplify-logo">
                        @RazorHelper.GetSmallImage(block.Image, alt: block.ClientName, classList: "hasRatio")
                    </div>
                </div>
            }
        </div>
    </div>
}

@SectionHelper.RenderSectionEnd()
