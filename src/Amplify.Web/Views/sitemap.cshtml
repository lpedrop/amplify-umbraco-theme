@inherits Amplify.Web.Custom.ViewPages.AmplifyViewPage<Sitemap>
@{
    Layout = "master.cshtml";
    var siteHomePage = Model.Root();
    var documentTypes = Model.AllowedListedDocumentTypes.Split(',').Select(p => p.Trim()).ToList(); 
}

@SectionHelper.RenderSectionStart(
    backgroundClass: Model.ContentBgColor?.Alias,
    bgTexture: Model.ContentBgTexture?.Url(),
    gradient: Model.ContentBgGradient,
    textClass: Model.ContentTextColor?.Alias,
    isCentered: true,
    className: "amplify-section is-normal-top",
    columnsClass: "has-margin-bottom-4",
    paddingSize: "is-medium"
    )

@Html.Partial($"~/Views/Partials/PageHeader.cshtml", Model)

<div class="column is-two-thirds-tablet">
    <div>
        <div class="content">
            <div class="box">
                @RenderLinkChildren(siteHomePage, 10, documentTypes)
            </div>
        </div>
    </div>
</div>

@SectionHelper.RenderSectionEnd()

@helper RenderLinkChildren(IPublishedContent parentPage, int maxSiteMapDepth, List<string> documentTypes)
{
    <ul class="has-margin-top-0">
        @foreach (var page in parentPage.Children.Where(f => documentTypes.Contains(f.ContentType.Alias.ToString())
        && !f.Value<bool>("hideFromXmlSiteMap")))
        {
            <li>
                <a href="@page.Url()">
                    <span>@page.Name</span>
                </a>
                @if (page.Level < maxSiteMapDepth && page.Children.Any(f => documentTypes.Contains(f.ContentType.Alias.ToString())
                && !f.Value<bool>("hideFromXmlSiteMap")))
                {
                    @RenderLinkChildren(page, maxSiteMapDepth, documentTypes)
                }
            </li>
        }
    </ul>
}
