@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Core.Models.Blocks.BlockListItem>
@using Amplify.Web.Custom.Extensions

@{
    var isContentPage = Model.Content.ContentType.Alias == SliderComponent.ModelTypeAlias ? ((SliderComponent)Model.Content).IsContentPage
        : ((Slider)Model.Content).IsContentPage;

    var content = new Slider(Model.Content);
    var marginClass = isContentPage ? "has-margin-bottom-5 has-margin-top-5" : "";
}

@if (content.SlideBlocks.HasValue())
{
    <div class="@marginClass">
        @if (content.SlideBlocks.Count() > 1)
        {
            @:<div class="glide-container amplify-slider">
                @:<div class="glide sectionGlide">
                    @:<div class="glide__track" data-glide-el="track">
                        @:<div class="glide__slides">
                        }

        @foreach (var item in content.SlideBlocks.Select((value, i) => new { i, value }))
        {

            if (content.SlideBlocks.Count() > 1)
            {

                @:<div class="glide__slide">
                }
                @Html.Partial($"~/Views/Partials/Blocks/{item.value.Content.ContentType.Alias}.cshtml", item.value)
                if (content.SlideBlocks.Count() > 1)
                {
                @:</div>
            }
        }

        @if (content.SlideBlocks.Count() > 1)
        {
        @:</div>
    @:</div>
    <div class="glide__bullets" data-glide-el="controls[nav]">
        @foreach (var item in content.SlideBlocks.Select((value, i) => new { i, value }))
        {
            <button class="glide__bullet" data-glide-dir="=@item.i"></button>
        }
    </div>
    <div class="glide__arrows" data-glide-el="controls">
        <button class="glide__arrow glide__arrow--left" data-glide-dir="<"><span class="icon"><i class="fas fa-lg fa-chevron-left"></i></span></button>
        <button class="glide__arrow glide__arrow--right" data-glide-dir=">"><span class="icon"><i class="fas fa-lg fa-chevron-right"></i></span></button>
    </div>
@:</div>
@:</div>
}
    </div>
}



